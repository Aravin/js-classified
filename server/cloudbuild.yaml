steps:
  # Build the Docker image
  # Build from root directory to access both server/ and db/ directories
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/locful-api:$SHORT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/locful-api:latest'
      - '-f'
      - 'server/Dockerfile'
      - '.'
    # No 'dir' specified - build from repo root

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/locful-api:$SHORT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/locful-api:latest'

  # Deploy to Cloud Run automatically after build
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'locful-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/locful-api:$SHORT_SHA'
      - '--region'
      - 'asia-southeast1'
      - '--platform'
      - 'managed'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--allow-unauthenticated'
      - '--set-secrets'
      - 'DATABASE_URL=DATABASE_URL:latest,CLOUDINARY_CLOUD_NAME=CLOUDINARY_CLOUD_NAME:latest,CLOUDINARY_API_KEY=CLOUDINARY_API_KEY:latest,CLOUDINARY_API_SECRET=CLOUDINARY_API_SECRET:latest'
      - '--set-env-vars'
      - 'PORT=8080'

images:
  - 'gcr.io/$PROJECT_ID/locful-api:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/locful-api:latest'

options:
  # Use default machine type to avoid quota restrictions
  # If you have quota, uncomment and use: machineType: 'E2_HIGHCPU_2' or 'E2_HIGHCPU_8'
  # machineType: 'E2_HIGHCPU_2'
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'

