generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model location {
  id           Int       @id @default(autoincrement())
  name         String?
  dist         String? // District
  state        String?
  state_code   String?
  country      String?
  country_code String?
  pincode      String?
  loc_type     String?
  coords       String?
  bbox         String?
  listings     listing[] // Relation field
}

model category {
  id                Int        @id @default(autoincrement())
  name              String
  slug              String     @unique
  parent_category   category?  @relation("CategoryToSubcategories", fields: [parent_category_id], references: [id])
  parent_category_id Int?
  subcategories     category[] @relation("CategoryToSubcategories")
  listings          listing[]  // Relation field

  @@index([parent_category_id])
}

enum ListingStatus {
  ACTIVE    @map("ACTIVE")
  DRAFT     @map("DRAFT")
  ENDED     @map("ENDED")
  SUSPENDED @map("SUSPENDED")
  DELETED   @map("DELETED")
}

model user {
  id         Int       @id @default(autoincrement())
  userId     String    @unique // auth0 user id
  username   String?   @unique
  email      String?   @unique
  phone      String?   @unique
  fullName   String?
  avatar     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  lastLogin  DateTime?
  listings   listing[]

  @@index([userId])
  @@index([username])
}

model listing {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(255)
  slug        String        @unique @db.VarChar(255)
  description String        @db.Text
  email       String?       @db.VarChar(255)
  phone       String?       @db.VarChar(20)
  price       Decimal       @db.Decimal(10, 2) @default(0)
  status      ListingStatus @default(DRAFT)
  category    category      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  location    location      @relation(fields: [locationId], references: [id])
  locationId  Int
  user        user          @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  images      image[]

  @@index([categoryId])
  @@index([locationId])
  @@index([userId])
  @@index([status])
  @@index([price])
}

model image {
  id           Int      @id @default(autoincrement())
  path         String   // Original image path/URL
  thumbnailPath String? // Thumbnail version path/URL
  order        Int      @default(0)  // 0 = main image, 1+ for additional images
  listing      listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId    Int
  createdAt    DateTime @default(now())

  @@index([listingId])
  @@index([order])
}